<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.base.personlol.dao.duo_dao">


	
	<resultMap type="duo" id="mapForRead">
		<id column="D_ID" property="duo_id" />
		<result column="D_TITLE" property="duo_title" />
		<result column="D_CONTENT" property="duo_content" 
		 	javaType="java.lang.String" jdbcType="NCLOB" />
		<result column="D_DATE" property="duo_date" />	
	</resultMap>	
	
	<insert id="duoWrite">
		INSERT INTO DUO VALUES(SEQ_DUO.NEXTVAL,#{duo_ownerid},DEFAULT,#{duo_content},DEFAULT,DEFAULT,#{duo_title})
	</insert>
	
	<!-- kang tae min -->
	<select id="getId" resultType="String">
		SELECT DUO_OWNERID  FROM Duo WHERE DUO_ID = #{duo_id} 
	</select>
	
	<update id="Disable">
		UPDATE Duo SET duo_active = 0 WHERE DUO_ID = #{duo_id}
	</update>
	
	<select id="getUser_lolname" resultType= "userinfo">
		SELECT USER_LOLNAME  FROM UserInfo WHERE USER_ID = #{duo_ownerid}
	</select>
	
	<update id="accept">
		UPDATE Duo SET duo_active = 0 , DUO_ACCEPTER = #{user_id} WHERE DUO_ID = #{duo_id}
	</update>
	
	<update id="convert">
		UPDATE Duo SET duo_active = 0 WHERE DUO_OWNERID = #{user_id}
	</update>
	
	<insert id="request" parameterType="String">
		INSERT INTO DUO_REQUEST (USER_ID, REQUEST_ID) VALUES (#{user_id}, #{request_id})
	</insert>
	
	<select id="check_request" resultType="Int">
		SELECT count(*) FROM DUO_REQUEST WHERE USER_ID =#{user_id} AND REQUEST_ID =#{request_id}
	</select>
	
	
<!-- 	<select id="all" resultType="Map">
		SELECT duo_id , duo_ownerid, duo_accepter, duo_content, duo_active, duo_date, duo_title, user_lolname
		FROM duo
		JOIN userinfo ON duo.duo_ownerid = userinfo.user_id
		WHERE duo_active = 1
		ORDER BY duo_id DESC
	</select> -->
	
	<select id="all" resultType="Map">
	    SELECT duo_id, duo_ownerid, duo_accepter, duo_content, duo_active, duo_date, duo_title, user_lolname
	    FROM (
	        SELECT duo_id, duo_ownerid, duo_accepter, duo_content, duo_active, duo_date, duo_title, user_lolname,
	               ROW_NUMBER() OVER (ORDER BY duo_id DESC) AS row_num
	        FROM duo
	        JOIN userinfo ON duo.duo_ownerid = userinfo.user_id
	        WHERE duo_active = 1
	    )
	    WHERE row_num BETWEEN #{start_page} AND #{end_page}
	</select>

	
	<select id="top" resultType="Map">
			SELECT du.duo_id, du.duo_ownerid, du.duo_accepter, du.duo_content, du.duo_active, du.duo_date, du.duo_title, du.user_lolname
			FROM (
			  SELECT d.*,u.*, ROWNUM AS rn
			  FROM duo d
			  JOIN USERINFO u ON d.DUO_OWNERID = u.USER_ID
			  WHERE
			    (DUO_TITLE LIKE '%탑%'OR duo_content LIKE '%탑%')
			    AND DUO_ACTIVE = 1
			  ORDER BY duo_id
			) du
			WHERE rn BETWEEN #{start_page} AND #{end_page}
	</select>
	
	<select id="jungle" resultType="Map">
			SELECT du.duo_id, du.duo_ownerid, du.duo_accepter, du.duo_content, du.duo_active, du.duo_date, du.duo_title, du.user_lolname
			FROM (
			  SELECT d.*,u.*, ROWNUM AS rn
			  FROM duo d
			  JOIN USERINFO u ON d.DUO_OWNERID = u.USER_ID
			  WHERE
			    (DUO_TITLE LIKE '%정글%'OR duo_content LIKE '%정글%')
			    AND DUO_ACTIVE = 1
			  ORDER BY duo_id
			) du
			WHERE rn BETWEEN #{start_page} AND #{end_page}
	</select>
		
	<select id="mid" resultType="Map">
			SELECT du.duo_id, du.duo_ownerid, du.duo_accepter, du.duo_content, du.duo_active, du.duo_date, du.duo_title, du.user_lolname
			FROM (
			  SELECT d.*,u.*, ROWNUM AS rn
			  FROM duo d
			  JOIN USERINFO u ON d.DUO_OWNERID = u.USER_ID
			  WHERE
			    (DUO_TITLE LIKE '%미드%'OR duo_content LIKE '%미드%')
			    AND DUO_ACTIVE = 1
			  ORDER BY duo_id
			) du
			WHERE rn BETWEEN #{start_page} AND #{end_page}
	</select>
	
	<select id="bottom" resultType="Map">
			SELECT du.duo_id, du.duo_ownerid, du.duo_accepter, du.duo_content, du.duo_active, du.duo_date, du.duo_title, du.user_lolname
			FROM (
			  SELECT d.*,u.*, ROWNUM AS rn
			  FROM duo d
			  JOIN USERINFO u ON d.DUO_OWNERID = u.USER_ID
			  WHERE
			    (DUO_TITLE LIKE '%봇%'OR duo_content LIKE '%봇%' 
				OR DUO_TITLE LIKE '%바텀%' OR duo_content LIKE '%바텀%'
				OR DUO_TITLE LIKE '%원딜%' OR duo_content LIKE '%원딜%')
			    AND DUO_ACTIVE = 1
			  ORDER BY duo_id
			) du
			WHERE rn BETWEEN #{start_page} AND #{end_page}
	</select>
	
	<select id="support" resultType="Map">
			SELECT du.duo_id, du.duo_ownerid, du.duo_accepter, du.duo_content, du.duo_active, du.duo_date, du.duo_title, du.user_lolname
			FROM (
			  SELECT d.*,u.*, ROWNUM AS rn
			  FROM duo d
			  JOIN USERINFO u ON d.DUO_OWNERID = u.USER_ID
			  WHERE
			    (DUO_TITLE LIKE '%서폿%' OR duo_content LIKE '%서폿%' OR
			    DUO_TITLE LIKE '%서포터%' OR duo_content LIKE '%서포터%' OR
			    DUO_TITLE LIKE '%도구%' OR duo_content LIKE '%도구%')
			    AND DUO_ACTIVE = 1
			  ORDER BY duo_id
			) du
			WHERE rn BETWEEN #{start_page} AND #{end_page}
	</select>
	
	
	<select id="tier_all" resultType="Map">
		SELECT f_join.duo_id, f_join.duo_ownerid, f_join.duo_accepter, f_join.duo_content, f_join.duo_active, f_join.duo_date, f_join.duo_title, f_join.USER_LOLNAME, summoner.summoner_tier
		FROM (
			SELECT duo_id, duo_ownerid, duo_accepter, duo_content, duo_active, duo_date, duo_title, user_lolname,
		  		   ROW_NUMBER() OVER (ORDER BY duo_id DESC) AS row_num
			FROM duo
		 	JOIN userinfo ON duo.duo_ownerid = userinfo.user_id
			WHERE duo_active = 1
		) f_join
		JOIN summoner ON f_join.user_lolname = summoner.summoner_name
		WHERE f_join.row_num BETWEEN #{start_page} AND #{end_page}
		AND summoner.summoner_tier = #{tier}
	</select>
	
	<!-- 글쓰기 중복체크 -->
	<select id="checkboard" resultType="Int">
	  SELECT CASE WHEN 
	  EXISTS (SELECT 1 FROM DUO WHERE DUO_OWNERID = #{user_id} AND DUO_ACTIVE = 1) THEN 1 ELSE 0 END AS result
	  FROM DUAL
	</select>

</mapper>